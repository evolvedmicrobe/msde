% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/msde-package.R
\name{sde.make.model}
\alias{sde.make.model}
\title{Model Creation}
\arguments{
\item{list}{\code{NULL} by default. Rather than passing model parameters to \code{sde.make.model} individually,
the parameters may be passed as a list. Any combination of model parameters may be provided in this
list (excluding debug and ...).
Values from this list will only be used if no coresponding value is provided as a parameter to \code{sde.make.model}}

\item{ndims}{an integer giving the number of dimensions for the model}

\item{nparams}{an integer giving the number of parameters for the model}

\item{definitionFilePath}{The full file path of a file containing c++ definitions for \code{sdeDr}, \code{sdeDf},
\code{isValidData} and \code{isValidParams}\cr
If \code{definitionFilePath} is provided, any values for \code{sdeDr}, \code{sdeDf},
\code{isValidData} or \code{isValidParams} will be ignored.
The file must contain definitions for all 4 functions.}

\item{sdeDr}{A string of c++ code giving a function definition for the model's drift function. \cr
The function's signature must be: void sdeDr(double dr[], double x[], double t, double params[])}

\item{sdeDf}{A string of c++ code giving a function definition for the model's diffusion function. \cr
The function's signature must be: void sdeDf(double df[], double x[], double sqrtT, double params[])}

\item{isValidData}{A string of c++ code giving a function definition for the model's data validation function.\cr
The function's signature must be: int isValidData(double x[]) \cr
The return value must be 1 for valid data, 0 for invalid data}

\item{isValidParams}{A string of c++ code giving a function definition for the model's parameter validation function. \cr
The function's signature must be: int isValidParams(double params[]) \cr
The return value must be 1 for valid parameters, 0 for invalid parameters}

\item{logPrior}{A string of c++ code defining a custom prior for the model.\cr
This parameter is optional.\cr
If it is not provided, the values of CustomPriorClass, CustomPriorConstructor and .CustomPriorFunction
will be used. \cr
If it is provided, it must consist of a complete class definition meeting the criteria specified
in the package vignette. \cr
Custom priors are only relevant for those users who do not wish to use any of the provided priors
(flat, normal and Gaussian Copula)}

\item{data.names}{a vector of names for the columns of data that will be used by the model}

\item{param.names}{a vector of names for the parameters that will be used by the model}

\item{...}{additional parameters that are passed to sourceCpp when compiling the c++ code}

\item{debug}{a boolean (\code{FALSE} by default) if set to \code{TRUE}, will cause the function to open a browser mid-call}
}
\value{
an sde.model containing:\cr \cr
                         ndims, \cr
                         nparams, \cr
                         logPrior, \cr
                         data.names, \cr
                         param.names, \cr
                         sim (simulation function for the model), \cr
                         post (posterior inference function for the model), \cr
                         drift (drift function for the model), \cr
                         diff (diffusion function for the model), \cr
                         loglik (loglikelihood function for the model) \cr \cr

                         The functions \code{sim}, \code{post}, \code{drift}, \code{diff} and \code{loglik}
                         should never be called directly. Instead use \code{sde.sim}, \code{sde.post},
                         \code{sde.diff}, \code{sde.drift} and \code{sde.loglik}
}
\description{
Calling \code{sde.make.model} will compile the c++ code provided in its parameters along with
            c++ code included in this package in order to produce a shared library.
            The functions of this shared library should be accessed by passing the result of \code{sde.make.model}
            into any of the functions \code{sde.sim}, \code{sde.post}, \code{sde.diff}, \code{sde.drift},
            or \code{sde.loglik}
}
\examples{
hest.model <- sde.make.model(list = hestList, cpp.out = TRUE)
names(hest.model)
# preview the C++ code
message(paste(hest.model$cpp.code[1:10], collapse = "\\n"))
}

